jobs:
  foo:
    runs-on: ubuntu-latest
    steps:
      - id: step1
        name: step1
        run: |
          foo='foooo'
          echo "foo: '$foo'"
          echo "foo=$foo" >> $GITHUB_OUTPUT
      
      - name: step2
        run: |
          echo "again, foo: '${{ steps.step1.outputs.foo }}'"

      - id: step3
        name: step3
        shell: python
        run: |
          bar = 'barrr'
          print(f"bar: '{bar}'")

          # Method I: Using subprocess
          import subprocess as sp
          script = f"""
          echo "bar={bar}" >> $GITHUB_OUTPUT
          echo "Using subprocess: '{bar}'"
          """
          sp.run(['bash', '-c', script])

          # Method II: Using os.environ  (https://github.com/orgs/community/discussions/28146)
          # import os
          # import uuid
          # def set_output(name, value):
          #     with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
          #         print(f'{name}={value}', file=fh)
          # def set_multiline_output(name, value):
          #     with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
          #         delimiter = uuid.uuid1()
          #         print(f'{name}<<{delimiter}', file=fh)
          #         print(value, file=fh)
          #         print(delimiter, file=fh)
          # set_output('bar', bar)

      - name: step4
        run: |
          echo "again2, foo: '${{ steps.step1.outputs.foo }}'"
          echo "again, bar : '${{ steps.step3.outputs.bar }}'"