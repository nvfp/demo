name: Testing Publish on release commit

on:
  push:
    branches:
      - main

jobs:
  check-commit-message:
    runs-on: ubuntu-latest

    outputs:
      status: ${{ steps.check.outputs.status }}
      version: ${{ steps.check.outputs.version }}

    steps:
    - id: check
      name: Check commit message
      env:
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      run: |
        echo "INFO: Commit message: $COMMIT_MESSAGE"
        
        regex="^([0-9]+\.[0-9]+\.[0-9]+) Release.*"
        
        if [[ $COMMIT_MESSAGE =~ $regex ]]; then 
          echo "INFO: Pattern matched."
          ver="${BASH_REMATCH[1]}"
          echo "INFO: Version: $ver"
          echo "status=success" >> $GITHUB_OUTPUT
          echo "version=$ver" >> $GITHUB_OUTPUT
        else
          echo "INFO: Pattern doesn't match."
          echo "status=fail" >> $GITHUB_OUTPUT
        fi

  check-changelog-file:
    needs: check-commit-message
    if: needs.check-commit-message.outputs.status == 'success'

    runs-on: ubuntu-latest
    
    outputs:
      status: ${{ steps.check.outputs.status }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: check
      name: Match version
      run: |
        echo "INFO: version: ${{ needs.check-commit-message.outputs.version }}"
        
        # Look for files in the "docs" folder with "changelog" in their name (ignore case)
        files=$(find docs -iname "*changelog*")
        echo "DEBUG: files: $files"

        # Validation I: Only one changelog file should be in the "docs" folder
        file_count=$(echo "$files" | wc -l)
        echo "DEBUG: file_count: $file_count"
        if [ "$file_count" -ne 1 ]; then
          echo "ERROR: Multiple changelog files found in the "docs" folder."
          exit 1
        fi

        # Parse
        text=$(cat "$files")
        # echo "text: $text"

        # Latest
        match=$(echo "$text" | grep -m 1 -Pzo "(?s)- \d+\.\d+\.\d+(.*?)\n-")
        echo "match: '$match'"

        # Trim the ending "\n-" (the last 2 chars; '\n' counts as 1 char)
        trimmed_match=${match%??}
        echo "trimmed_match: '$trimmed_match'"

        # Get the version from the changelog file
        ver_from_changelog=$(echo "$trimmed_match" | grep -oP '\d+\.\d+\.\d+' | head -n 1)
        echo "ver_from_changelog: '$ver_from_changelog'"

        # Match the version
        if [[ "$needs.check-commit-message.outputs.version" == "$ver_from_changelog" ]]; then
            echo "INFO: Versions matched."
            echo "status=success" >> $GITHUB_OUTPUT
        else
            echo "INFO: Versions don't match."
            echo "status=fail" >> $GITHUB_OUTPUT
        fi

  update-pyproject-toml:
    needs: [check-commit-message, check-changelog-file]
    if: needs.check-changelog-file.outputs.status == 'success'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Rewriting
      run: |
        echo "foo"

  publish-to-PyPI:
    needs: [check-commit-message, check-changelog-file, update-pyproject-toml]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Publish
      run: |
        echo "bar"